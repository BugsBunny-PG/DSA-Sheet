/*

struct Node
{
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }

*/
/*
class Solution
{
    public:
    //Function to check if the linked list has a loop.
    bool detectLoop(Node* head)
    {
        if(head==NULL){
            return false;
        }
        map<Node*,bool> visited;
        Node* temp=head;
        while(temp!=NULL){
            if(visited[temp]==true){
                return true;
            }
            visited[temp]=true;
            temp=temp->next;
        }
        return false;
    }
};
*/
  //floyd's Algorithm
    bool hasCycle(ListNode* head){
        if(head==NULL||head->next==NULL)
         return false;
        ListNode* fast=head;
        ListNode* slow=head;
        while(slow!=NULL&&fast!=NULL){
            fast=fast->next;
            if(fast!=NULL){
                fast=fast->next;
            }
            slow=slow->next;
            if(fast==slow)
              return true; 
        }
        return false;
    }

